---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION, CATEGORIES } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={`Blog - ${SITE_TITLE}`} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main>
      <h1>All Blog Posts</h1>
      
      <div class="categories">
        <h2>Categories</h2>
        <div class="category-list">
          {CATEGORIES.map((category) => (
            <a href={`/category/${category.slug}`} class="category-tag">
              {category.name}
            </a>
          ))}
        </div>
      </div>

      <div class="posts">
        {posts.map((post) => (
          <article class="post-card">
            <a href={`/blog/${post.id}/`}>
              <img width={720} height={360} src={post.data.heroImage} alt="" />
              <h2 class="title">{post.data.title}</h2>
              <p class="description">{post.data.description}</p>
              <div class="metadata">
                <span class="date">
                  <FormattedDate date={post.data.pubDate} />
                </span>
                {post.data.category && (
                  <span class="category">
                    {CATEGORIES.find(c => c.slug === post.data.category)?.name}
                  </span>
                )}
              </div>
            </a>
          </article>
        ))}
      </div>
    </main>
    <Footer />
  </body>
</html>

<style>
  main {
    width: 960px;
    max-width: calc(100% - 2em);
    margin: auto;
    padding: 3em 1em;
  }

  h1 {
    color: var(--text-primary);
    margin-bottom: 2rem;
  }

  .categories {
    margin-bottom: 3rem;
  }

  .categories h2 {
    color: var(--text-primary);
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  .category-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .category-tag {
    background: var(--bg-tertiary);
    color: var(--text-secondary);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    text-decoration: none;
    font-size: 0.9rem;
    transition: all 0.2s ease;
  }

  .category-tag:hover {
    background: var(--accent);
    color: white;
  }

  .posts {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
  }

  .post-card {
    background: var(--bg-secondary);
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.2s ease;
  }

  .post-card:hover {
    transform: translateY(-4px);
  }

  .post-card a {
    text-decoration: none;
    color: inherit;
  }

  .post-card img {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }

  .post-card .title {
    color: var(--text-primary);
    font-size: 1.4rem;
    margin: 1rem;
    margin-bottom: 0.5rem;
  }

  .post-card .description {
    color: var(--text-secondary);
    font-size: 0.9rem;
    margin: 0 1rem;
    line-height: 1.4;
  }

  .metadata {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 1rem;
    font-size: 0.8rem;
    color: var(--text-secondary);
  }

  .category {
    background: var(--bg-tertiary);
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
  }

  @media (max-width: 720px) {
    .posts {
      grid-template-columns: 1fr;
    }
  }
</style>